#!/usr/bin/env php
<?php
/*
 * Load BFW Modules script : Read all dir in vendor for find bfw modules
 *                              and create symlink to modules dir
 *
 * @created : 2016-05-28
 * @version : 3.0.0
 * @author : bulton-fr <bulton.fr@gmail.com>
 */

//Get CLI parameters
$cliArgs = getopt(
    'hp:v::rm::',
    [
        'help',
        'bfw-path:',
        'vendor-path::',
        'reinstall',
        'module::'
    ]
);

//Help text
if (isset($cliArgs['help']) || isset($cliArgs['h'])) {
    echo 'HELP COMMAND'."\n";
    echo '-p --bfw-path=<directory> : Path to root BFW project'."\n";
    echo '-v --vendor-path=<directory> : Path to vendor directory.'
        .' Default is "./vendor/" from root BFW project'."\n";
    echo '-r --reinstall : Force reinstall'."\n";
    echo '-m --module=<moduleName> : Run the action only for a module'."\n";
    
    exit;
}

$bfwPath = realpath(__DIR__.'/../../../../');
if (isset($cliArgs['bfw-path'])) {
    $bfwPath = realpath($cliArgs['bfw-path']);
} elseif (isset($cliArgs['p'])) {
    $bfwPath = realpath($cliArgs['p']);
}
//echo "\033[0;33mBFW path : $bfwPath\033[0m\n";

$vendorPath = $bfwPath.'/vendor';
if (isset($cliArgs['vendor-path'])) {
    $vendorPath = realpath($cliArgs['vendor-path']);
} elseif (isset($cliArgs['v'])) {
    $vendorPath = realpath($cliArgs['v']);
}
//echo "\033[0;33mVendor path : $vendorPath\033[0m\n";

$reinstall = false;
if (isset($cliArgs['reinstall']) || isset($cliArgs['r'])) {
    $reinstall = true;
}

$specificModule = '';
if (isset($cliArgs['module'])) {
    $specificModule = $cliArgs['module'];
} elseif (isset($cliArgs['m'])) {
    $specificModule = $cliArgs['m'];
}

// Load composer autoloader
require_once($vendorPath.'/autoload.php');

// Define variable used to save all modules path detected
$listModulesFound = [];

//Check if a part of the framework structure is found in declared path
if (
    !file_exists($bfwPath.'/app/config/')
    || !file_exists($bfwPath.'/app/modules/')
) {
    $errorMsg = 'Directory "config" or "modules" is not found in bfw-path. '
                .'Check your path or reinstall the framework.';
    
    trigger_error($errorMsg, E_USER_ERROR);
    echo "\033[1;31mError: ".$errorMsg."\033[0m\n";
    exit;
}

$app = \BFW\Install\Application::getInstance();
$app->initSystems([
    'rootDir'    => $bfwPath,
    'vendorDir'  => $vendorPath,
    'runSession' => false
]);

echo "\033[0;33mRun BFW Modules Install\033[0m\n";

//Run the search of modules in vendor directory
$readDir = new \BFW\Install\ReadDirLoadModule($listModulesFound);
$readDir->run($vendorPath.'/');

//If no module has been found into vendor directory
if (count($listModulesFound) <= 0) {
    echo "\033[0;33m No module found into vendor-path.\033[0m\n";
    exit;
}

//For each modules found into the vendor directory
foreach ($listModulesFound as $moduleFindPath) {
    $module = new \BFW\Install\ModuleInstall(
        realpath($moduleFindPath)
    );
    
    try {    
        $module->loadInfos();
    } catch(\Exception $e) {
        echo "...\033[1;31m Module ".$module->getName()
            .' error : '.$e->getMessage()
            ."\033[0m\n";
        
        continue;
    }
    
    $moduleName = $module->getName();
    
    if ($specificModule === '' || $specificModule === $module->getName()) {
        $module->install($reinstall);
        $app->getModuleInstall()->addToList($module);
    }
}

//Run the installation scripts for all modules
$app->run();
